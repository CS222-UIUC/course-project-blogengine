[{"/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/index.js":"1","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/App.js":"2","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Blog.js":"3","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Home.js":"4","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/About.js":"5","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Posts.js":"6","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Navbar.js":"7","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Post.js":"8"},{"size":346,"mtime":1683092621744,"results":"9","hashOfConfig":"10"},{"size":1179,"mtime":1683092621742,"results":"11","hashOfConfig":"10"},{"size":3971,"mtime":1683093708467,"results":"12","hashOfConfig":"10"},{"size":916,"mtime":1683093716992,"results":"13","hashOfConfig":"10"},{"size":1193,"mtime":1683093715571,"results":"14","hashOfConfig":"10"},{"size":4231,"mtime":1683092621744,"results":"15","hashOfConfig":"10"},{"size":555,"mtime":1683092621743,"results":"16","hashOfConfig":"10"},{"size":2281,"mtime":1683092621743,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1i2ekbm",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/index.js",[],[],"/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/App.js",["46"],[],"import React from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport Blog from './Blog';\nimport About from './About';\nimport Posts from './Posts';\nimport Post from './Post';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  // let component;\n  // switch (window.location.pathname) {\n  //   case \"/\":\n  //     component = <Home />;\n  //     break;\n  //   case \"/blog\":\n  //     component = <Blog />;\n  //     break;\n  //   case \"/posts\":\n  //     component = <Posts />;\n  //     break;\n  //   case \"/about\":\n  //     component = <About />;\n  //     break;\n  // }\n\n  // return <>\n  //   <Navbar />\n  //   <div class=\"container\">\n  //     {component}\n  //   </div>\n  // </>\n  return (\n    <>\n      <Navbar />\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/blog\" element={<Blog />} />\n          <Route path=\"/posts\" element={<Posts />} />\n          <Route path=\"/posts/:slug\" element={<Post />} /> \n          <Route path=\"/about\" element={<About />} />\n        </Routes>\n      </div>\n    </>\n  );\n}\n\nexport default App;","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Blog.js",["47","48","49","50","51"],[],"import React, { useState } from 'react';\nimport DOMPurify from 'dompurify';\nimport { Renderer, parse } from 'marked';\nimport './Blog.css';\n\nexport default function Blog() {\n  console.log('in in blog');\n\n  const [input, setInput] = useState({\n    title: '',\n    content: '',\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setInput((prevInput) => {\n      return {\n        ...prevInput,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n\n    console.log(input);\n  };\n\n  const customRenderer = new Renderer();\n  customRenderer.image = function(href, title, text) {\n    const match = text.match(/(?<=\\|)\\s*(\\d+)\\s+(\\d+)/);\n    const match1 = text.match(/(?<=\\|)\\s*(?:0*\\.)?\\d+(?:\\.\\d+)?/); // /^\\d+(\\.\\d+)?$/ /(?<!\\d)0*(\\d*)(?:\\.(\\d+))?/\n    if (match) {\n      const width = match[1] + 'px';\n      const height = match[2] + 'px';\n      text = text.replace(\"|\" + match[0], '').trim();\n      const style = `width: ${width}; height: ${height};`;\n      return `<img src=\"${href}\" alt=\"${text}\" title=\"${title}\" style=\"${style}\">`;\n    } else if (match1) {\n      const img = new Image();\n      img.src = href;\n      console.log(match1);\n      const origWidth = img.naturalWidth;\n      const origHeight = img.naturalHeight;\n\n      const scale = match1[0];\n      const newWidth = origWidth * scale;\n      const newHeight = origHeight * scale;\n      text = text.replace(\"|\" + match1[0], '').trim();\n      const style = `width: ${newWidth}px; height: ${newHeight}px;`;\n\n      img.remove();\n\n      return `<img src=\"${href}\" alt=\"${text}\" title=\"${title}\" style=\"${style}\">`;\n    } else {\n      console.log(\"IM HERE\");\n\n      return `<img src=\"${href}\" alt=\"${text}\" title=\"${title}\">`;\n    }\n  };\n\n  const renderText = (content) => {\n    const html = parse(content, {renderer: customRenderer});\n    const sanitizedHtml = DOMPurify.sanitize(html);\n    return { __html: sanitizedHtml };\n  };\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n      <h1 style={{ textAlign: \"center\" }}>Blog</h1>\n      <form method=\"post\" action=\"/blog\" style={{ maxWidth: \"800px\", width: \"100%\" }}>\n        <div className=\"form-group\">\n          <label>Title</label>\n          <input\n            className=\"form-control\"\n            name=\"title\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter title\"\n          />\n          <small id=\"titleHelp\" className=\"form-text text-muted\">\n            super cool title that draws people in.\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <label>Your Post</label>\n          <textarea\n            name=\"content\"\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            placeholder=\"Let the ink flow!\"\n          ></textarea>\n        </div>\n        <button className=\"btn btn-primary\">Post</button>\n      </form>\n \n      <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n        <img\n          src=\"https://thumbs.dreamstime.com/z/d-illustration-depicting-set-cut-out-printed-letters-arranged-to-form-words-get-creative-get-creative-concept-108033401.jpg\"\n          alt=\"left-image\"\n          style={{ width: \"40%\", height: \"auto\", objectFit: \"cover\", marginRight: \"20px\" }}\n        />\n        <img\n          src=\"https://www.success.com/wp-content/uploads/2016/07/waystotapintoyourcreativeself.jpg\"\n          alt=\"right-image\"\n          style={{ width: \"40%\", height: \"auto\", objectFit: \"cover\", marginLeft: \"20px\" }}\n        />\n      </div>\n \n      <p style={{ marginTop: \"20px\" }}>\n        Having trouble coming up with post ideas?&nbsp;\n        <a href=\"https://coschedule.com/blog/creative-blog-post-ideas-and-topics\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Click here\n        </a>\n        &nbsp;to get your creative juices flowing!\n      </p>\n    </div>\n  );\n}\n","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Home.js",["52"],[],"import React from 'react';\n\nexport default function Home() {\n    console.log(\"home\");\n    return (\n        <div>\n            <div className=\"title\" style={{ fontFamily: 'cursive' }}>\n                <h1><center>The Inkwell</center></h1>\n            </div>\n \n \n            <div className=\"summary\">\n                <h2>Welcome to our shared blog engine server!</h2>\n            </div>\n \n \n            <div className=\"text\">\n                <p>Thanks for stopping by :). You can make blog posts, new friends, <br />and even comment on their posts! When you're here, the <br /> world's your oyster.</p>\n            </div>\n \n \n            <img src=\"https://mailrelay.com/wp-content/uploads/2018/03/que-es-un-blog-1.png\" alt=\"Happy blogging!\" className=\"img\"></img>\n            <img src=\"https://www.macmillandictionary.com/external/slideshow/full/emoji_sparkle_full.jpg\" className=\"img2\"></img>\n        </div>\n    ); \n}\n","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/About.js",["53"],[],"import React from 'react';\n\nexport default function About() {\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <h1>About</h1>\n \n \n        <form method='post' action='/' style={{ width: '50%' }}>\n            <div className=\"form-group\">\n                <label>Name</label>\n                <input className=\"form-control\" name=\"name\" aria-describedby=\"emailHelp\" placeholder=\"Enter your name here\" />\n            </div>\n            <div className=\"form-group\">\n                <label>Email</label>\n                <input className=\"form-control\" name=\"email\" aria-describedby=\"nameHelp\" placeholder=\"Please type in your email\"></input>\n            </div>\n            <button className='btn btn-primary'>Sign In</button>\n        </form>\n \n \n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            <img src=\"https://previews.123rf.com/images/kotokomi/kotokomi1507/kotokomi150700032/42499014-you-are-a-star-modern-calligraphy-phrase-handwritten-on-watercolor-golden-stars-background.jpg\" alt=\"your-image-description\" style={{width: '50%', height: 'auto'}} />\n        </div>\n    </div>\n ); \n}\n","/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Posts.js",[],[],"/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Navbar.js",[],[],"/Users/sakshisivaraman/course-project-blogengine/blog/react-app/src/Post.js",[],[],{"ruleId":"54","severity":1,"message":"55","line":9,"column":27,"nodeType":"56","messageId":"57","endLine":9,"endColumn":33},{"ruleId":"54","severity":1,"message":"58","line":14,"column":9,"nodeType":"56","messageId":"57","endLine":14,"endColumn":21},{"ruleId":"54","severity":1,"message":"59","line":25,"column":9,"nodeType":"56","messageId":"57","endLine":25,"endColumn":20},{"ruleId":"54","severity":1,"message":"60","line":64,"column":9,"nodeType":"56","messageId":"57","endLine":64,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":100,"column":9,"nodeType":"63","endLine":104,"endColumn":11},{"ruleId":"61","severity":1,"message":"62","line":105,"column":9,"nodeType":"63","endLine":109,"endColumn":11},{"ruleId":"64","severity":1,"message":"65","line":23,"column":13,"nodeType":"63","endLine":23,"endColumn":124},{"ruleId":"61","severity":1,"message":"62","line":23,"column":13,"nodeType":"63","endLine":23,"endColumn":272},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'handleChange' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'renderText' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]